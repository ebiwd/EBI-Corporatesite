image: netroby/alpine-rsync

#project specific variables can be defines here, or overridden project settings
variables:
  DEV_SERVER: ves-hx-10.ebi.ac.uk ves-hx-11.ebi.ac.uk ves-hx-12.ebi.ac.uk ves-hx-13.ebi.ac.uk
  DEV_PATH: /var/www/drupal/html/staticpages
  DEV_URL: wwwdev.ebi.ac.uk
  PROD_SERVER: ves-oy-10.ebi.ac.uk ves-oy-11.ebi.ac.uk ves-oy-12.ebi.ac.uk ves-oy-13.ebi.ac.uk ves-pg-10.ebi.ac.uk ves-pg-11.ebi.ac.uk ves-pg-12.ebi.ac.uk ves-pg-13.ebi.ac.uk
  PROD_PATH: /var/www/drupal/html/staticpages
  PROD_URL: http://www.ebi.ac.uk
# do not define here, put in project variables
  SSH_OWNER: username
  SSH_OWNER_KEY: secret-key
  SSH_APACHE: username
  SSH_APACHE_KEY: secret-key

  
#setup ssh keys
.deploy_setup: &deploy_setup
  before_script:
    - mkdir ~/.ssh
    - echo -e "${SSH_OWNER_KEY}" >> ~/.ssh/${SSH_OWNER} && chmod 400 ~/.ssh/${SSH_OWNER}
    - echo -e "${SSH_APACHE_KEY}" >> ~/.ssh/${SSH_APACHE} && chmod 400 ~/.ssh/${SSH_APACHE}
    - echo -e "Host *\n\tIdentityFile ~/.ssh/%r\n\tStrictHostKeyChecking no" >> ~/.ssh/config

stages:
  - build
  - deploy
  - restart

build:
  stage: build
  image: myprod/gulp
  before_script:
    - cd ${CI_PROJECT_DIR}
    - npm install --quiet
  script:
    - gulp
  artifacts:
    paths:
      - dist

deploy_dev:
  <<: *deploy_setup
  stage: deploy
  script:
    - for VM in ${DEV_SERVER}; do rsync -auv --delete-after ${CI_PROJECT_DIR}/dist/. ${SSH_OWNER}@${VM}:${DEV_PATH}/; done 
  only:
    - master
  environment:
    name: dev
    url: ${DEV_URL}

restart_dev:
  <<: *deploy_setup
  stage: restart
  only:
    - master
  script:
    # stop apache, etc
    - for VM in ${DEV_SERVER}; do ssh -tt ${SSH_APACHE}@${VM} 'sudo /etc/init.d/httpd stop; sudo /etc/init.d/memcached stop; sudo /etc/init.d/rh-php56-php-fpm stop'; done || true
    # start apache, etc
    - for VM in ${DRUPAL_VMS}; do ssh -tt ${SSH_APACHE}@${VM} 'sudo /etc/init.d/httpd start; sudo /etc/init.d/memcached start; sudo /etc/init.d/rh-php56-php-fpm start'; done
    # check apache status
    - for VM in ${DRUPAL_VMS}; do ssh -tt ${SSH_APACHE}@${VM} 'sudo /etc/init.d/httpd status && sudo /etc/init.d/memcached status && sudo /etc/init.d/rh-php56-php-fpm status'; done


